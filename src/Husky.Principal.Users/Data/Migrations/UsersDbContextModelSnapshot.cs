// <auto-generated />
using System;
using Husky.Principal.Users.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Husky.Principal.Users.Data.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    partial class UsersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Husky.Principal.Users.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("RegisteredTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccuratePlace")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)")
                        .HasMaxLength(24);

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("ContactPhoneNumber")
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11);

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("DisplayAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DisplayAddressAlternate")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(24)")
                        .HasMaxLength(24);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<decimal>("Lat")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<int>("LatLonType")
                        .HasColumnType("int");

                    b.Property<decimal>("Lon")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)")
                        .HasMaxLength(24);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserAddresses");
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserEmail", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.ToTable("UserEmails");
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserInGroup", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserInGroups");
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserLoginRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttemptedAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Ip")
                        .HasColumnType("varchar(39)")
                        .HasMaxLength(39);

                    b.Property<int>("LoginResult")
                        .HasColumnType("int");

                    b.Property<string>("SickPassword")
                        .HasColumnType("varchar(88)")
                        .HasMaxLength(88);

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserLoginRecords");
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserPassword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("IsObsolete")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserPasswords");
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserPhone", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11);

                    b.HasKey("UserId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("UserPhones");
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserReal", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("RealName")
                        .HasColumnType("nvarchar(24)")
                        .HasMaxLength(24);

                    b.Property<int?>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("SocialIdNumber")
                        .HasColumnType("varchar(18)")
                        .HasMaxLength(18);

                    b.HasKey("UserId");

                    b.HasIndex("SocialIdNumber")
                        .IsUnique()
                        .HasFilter("[SocialIdNumber] IS NOT NULL");

                    b.ToTable("UserReals");
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserWeChat", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(24)")
                        .HasMaxLength(24);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(24)")
                        .HasMaxLength(24);

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("HeadImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("PrivateId")
                        .HasColumnType("varchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(24)")
                        .HasMaxLength(24);

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("UnionId")
                        .HasColumnType("varchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("UserId");

                    b.HasIndex("UnionId")
                        .IsUnique()
                        .HasFilter("[UnionId] IS NOT NULL");

                    b.ToTable("UserWeChats");
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserWeChatOpenId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OpenIdType")
                        .HasColumnType("int");

                    b.Property<string>("OpenIdValue")
                        .IsRequired()
                        .HasColumnType("varchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("WeChatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpenIdValue")
                        .IsUnique();

                    b.HasIndex("WeChatId");

                    b.ToTable("UserWeChatOpenIds");
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserAddress", b =>
                {
                    b.HasOne("Husky.Principal.Users.Data.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserEmail", b =>
                {
                    b.HasOne("Husky.Principal.Users.Data.User", "User")
                        .WithOne("Email")
                        .HasForeignKey("Husky.Principal.Users.Data.UserEmail", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserInGroup", b =>
                {
                    b.HasOne("Husky.Principal.Users.Data.UserGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Husky.Principal.Users.Data.User", "User")
                        .WithMany("InGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserLoginRecord", b =>
                {
                    b.HasOne("Husky.Principal.Users.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserPassword", b =>
                {
                    b.HasOne("Husky.Principal.Users.Data.User", "User")
                        .WithMany("Passwords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserPhone", b =>
                {
                    b.HasOne("Husky.Principal.Users.Data.User", "User")
                        .WithOne("Phone")
                        .HasForeignKey("Husky.Principal.Users.Data.UserPhone", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserReal", b =>
                {
                    b.HasOne("Husky.Principal.Users.Data.User", "User")
                        .WithOne("Real")
                        .HasForeignKey("Husky.Principal.Users.Data.UserReal", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserWeChat", b =>
                {
                    b.HasOne("Husky.Principal.Users.Data.User", "User")
                        .WithOne("WeChat")
                        .HasForeignKey("Husky.Principal.Users.Data.UserWeChat", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Husky.Principal.Users.Data.UserWeChatOpenId", b =>
                {
                    b.HasOne("Husky.Principal.Users.Data.UserWeChat", "WeChat")
                        .WithMany("OpenIds")
                        .HasForeignKey("WeChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
